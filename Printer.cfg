**This is my Printer.cfg if you would like to see it!**

[include timelapse.cfg]
[include mainsail.cfg]
[include KAMP/*cfg]

# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 128
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 300
homing_speed: 75
homing_retract_dist: 10

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.750
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 128
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 300
homing_speed: 75

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.750
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 400
position_min: -0.2

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 1.2
stealthchop_threshold: 999999

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 128
rotation_distance: 3.443
nozzle_diameter: 0.500
filament_diameter: 1.750
heater_pin: PC8
sensor_type: Generic 3950
sensor_pin: PA0
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 270
min_extrude_temp: 170
pressure_advance: 0.06
pressure_advance_smooth_time: 0.005
max_extrude_cross_section: 50.0

[verify_heater extruder]
max_error: 240
check_gain_time: 60
hysteresis: 5
heating_gain: 2

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.800
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: Generic 3950
sensor_pin: PC4
#control: pid
#pid_Kp: 78.1
#pid_Ki: 13.95
#pid_Kd: 291.8
min_temp: 0
max_temp: 130

[heater_fan heatbreak_cooling_fan]
pin: PC7
heater: extruder
heater_temp: 50.0

[controller_fan box_fan]
pin: PB15
fan_speed: 1

[fan]
pin: PC6
cycle_time: 0.00004
hardware_pwm: True
max_power: 0.1

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_0E0027001750425938323120-if00

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points: 150, 150, 20  # an example

[temperature_sensor RPi]
sensor_type: temperature_host
#sensor_path:
#   The path to temperature system file. The default is
#   "/sys/class/thermal/thermal_zone0/temp" which is the temperature
#   system file on a Raspberry Pi computer.

[printer]
kinematics: cartesian
max_velocity: 650
max_accel: 1500
max_accel_to_decel: 750
max_z_velocity: 15
max_z_accel: 100
square_corner_velocity: 7

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

# See the sample-lcd.cfg file for definitions of common LCD displays.

[display]
lcd_type: emulated_st7920
spi_software_miso_pin: PD8 # status led, Virtual MISO
spi_software_mosi_pin: PD6
spi_software_sclk_pin: PB9
en_pin: PB8
encoder_pins: ^PA10, ^PA9
click_pin: ^!PA15

[menu __main __octoprint]
type: disabled
name: OctoPrint

[output_pin beeper]
pin: PB5
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1

[probe]
pin: ^!PC14
x_offset: 37
y_offset: -37
#z_offset: 15
speed: 5
samples: 2
samples_result: average
sample_retract_dist: 5
samples_tolerance: 0.050
samples_tolerance_retries: 3
lift_speed: 50

#[bltouch]
#sensor_pin: ^PC14
#control_pin: PA1
#x_offset: -45
#y_offset: -6
#Z_offset: 15

[safe_z_home]
home_xy_position: 110, 186   # Nozzle coordinates
speed: 75
z_hop: 10
z_hop_speed: 50

[bed_screws]
screw1: 40, 40
screw2: 212, 40
screw3: 212, 260
screw4: 40, 260

[screws_tilt_adjust]
screw1: 1, 80
screw1_name: front left screw
screw2: 225, 80
screw2_name: front right screw
screw3: 225, 285
screw3_name: rear right screw
screw4: 1, 285
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M3


[bed_mesh]
speed: 150
horizontal_move_z: 5
mesh_min: 40, 10
mesh_max: 275, 250
probe_count: 10, 10
algorithm: bicubic

[exclude_object]

[input_shaper]
shaper_freq_x: 60  # frequency for the X mark of the test model (11200mm/s^2 max with MZV)
shaper_freq_y: 24.4  # frequency for the Y mark of the test model (2000mm/s^2 ZV)
shaper_type_x: ei
shaper_type_y: ei

[gcode_macro FILAMENT_LOAD_BOWDEN]
gcode:
 G1 X150 Y150 Z50 F1500 # Move to middle of bed and 5 cm up
 M83                   # Put the extruder into relative mode
 G92 E0.0              # Reset the extruder so that it thinks it is at position zero
 G1 E50 F500
 G1 E50 F500 
 G1 E50 F500 
 G1 E50 F500 
 G1 E50 F500
 G1 E50 F500
 G1 E50 F500
 G1 E50 F500
 G1 E50 F100
 G1 E50 F100 
 G92 E0.0              # Reset the extruder again
 G1 E-5 F100
 G92 E0.0
 M82                   # Put the extruder back into absolute mode.

[gcode_macro FILAMENT_UNLOAD_BOWDEN]
gcode:
 G1 X150 Y150 Z50 F1500 # Move to middle of bed and 5 cm up
 M83                   # Put the extruder into relative mode
 G92 E0.0              # Reset the extruder so that it thinks it is at position zero
 G1 E20 F500
 G1 E-50 F500
 G1 E-50 F500
 G92 E0.0              # Reset the extruder again
 M82                   # Put the extruder back into absolute mode.

[gcode_macro START_PRINT]
gcode:
    # Load variables
    {% set bed_temp = params.BED_TEMP|default(60)|int %}
    {% set extruder_temp = params.EXTRUDER_TEMP|default(180)|int %}
    # Set printer to Absolute
    G90
    # Welcome and report temperatures
    M117 Welcome, today we are printing at extruder:{extruder_temp} and bed:{bed_temp}
    # Prepare for pre-print stuff
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=180
    # Wait for temp
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp}
    # Home before mesh
    G28 ;home
    #Set acceleration higher for Mesh
    M204 S750
    #Setup KAMP
    SETUP_KAMP_MESHING
    SETUP_VORON_PURGE ADAPTIVE_ENABLE=1 Distance_to_object_y=35
    # Perform Mesh Calibration
    BED_MESH_CALIBRATE 
    # Save mesh profile
    BED_MESH_PROFILE save={bed_temp}
    # Load mesh profile
    BED_MESH_PROFILE load={bed_temp}
    # Set Extruder temp to print
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}
    # Move to brushing position
    G0 X150 Y150 Z35 F1500
    # Reset Extruder
    G92 E0
    # Wait for Extruder to reach print temp
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}
    #KAMP purge line
    VORON_PURGE
    # Reset Extruder
    G92 E0

[gcode_macro END_PRINT]
gcode:
   #Load variable for mesh name
   {% set bed_temp = params.BED_TEMP|default(60)|int %}
   M140 S0 ; turn off bed
   G91
   G1 X5 Y5 F3000
   # Retract a bit
   G1 E-2 F500
   # Turn off extruder and fan
   M104 S0
   M106 S0
   # Raise nozzle by 10mm
   G1 Z10 F3000
   G90
   # Deliver print
   G1 X0 Y280
   # Disable steppers
   M84 X Y E

[gcode_arcs]
resolution: 1.0

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F500
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E5 F250
    G91
    G1 E-25 F250
    M300 S440 P100
    M300 S440 P100
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 10.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 280.0   ; custom y position; value must be within your defined min and max of Y
Variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 4.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 20.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 20.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
gcode:

[gcode_macro M300]
gcode:  
  {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
  {% set P = params.P|default(100)|int %} ; P sets the tone duration
  {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
  {% if S <= 0 %} ; dont divide through zero
  {% set F = 1 %}
  {% set L = 0 %}
  {% elif S >= 10000 %} ;max frequency set to 10kHz
  {% set F = 0 %}
  {% else %}
  {% set F = 1/S %} ;convert frequency to seconds 
  {% endif %}
  SET_PIN PIN=beeper VALUE={L} CYCLE_TIME={F} ;Play tone
  G4 P{P} ;tone duration
  SET_PIN PIN=beeper VALUE=0
[idle_timeout]
gcode:
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0 # disable the extruder motor
    TURN_OFF_HEATERS
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 600
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

[gcode_macro G0]
rename_existing: G99999
gcode:
    {% set p=[] %}
        {% for key in params %}
    {% set p = p.append(key + params[key]) %}
        {% endfor %}
        {% if params.F is defined %}
    {% set speed = params.F|int/60 %}
    {% set pa = printer.configfile.settings.extruder.pressure_advance * ( 100 / speed ) %}
    SET_PRESSURE_ADVANCE ADVANCE={pa}
        {% endif %}
        G99999 { p|join(" ") }
